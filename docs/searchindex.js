Search.setIndex({"docnames": ["clifford_noise_characterisation", "frame_randomisation", "index", "measurement_reduction", "mitex", "mitres", "mittask", "probabilistic_error_cancellation", "spam", "spectral_filtering", "taskgraph", "utils", "zero_noise_extrapolation"], "filenames": ["clifford_noise_characterisation.rst", "frame_randomisation.rst", "index.rst", "measurement_reduction.rst", "mitex.rst", "mitres.rst", "mittask.rst", "probabilistic_error_cancellation.rst", "spam.rst", "spectral_filtering.rst", "taskgraph.rst", "utils.rst", "zero_noise_extrapolation.rst"], "titles": ["qermit.clifford_noise_characterisation", "qermit.frame_randomisation", "Qermit", "qermit.measurement_reduction", "qermit.mitex", "qermit.mitres", "qermit.mittask", "qermit.probabilistic_error_cancellation", "qermit.spam", "qermit.spectral_filtering", "qermit.taskgraph", "qermit.utils", "qermit.zero_noise_extrapolation"], "terms": {"ccl": [0, 2], "gen_cdr_mitex": [0, 2], "simulator_backend": [0, 7], "backend": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12], "n_non_clifford": 0, "int": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12], "n_pair": 0, "total_state_circuit": 0, "kwarg": [0, 1, 3, 4, 7, 8, 9, 12], "mitex": [0, 2, 3, 7, 9, 12], "produc": [0, 1, 3, 7, 8, 9, 10], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12], "appli": [0, 1, 2], "clifford": [0, 2, 7], "circuit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "learn": [0, 7], "data": [0, 2, 7, 10, 12], "regress": [0, 2], "mitig": [0, 2, 4, 5, 7, 9, 12], "method": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12], "when": [0, 2, 4, 5, 6, 10, 11], "calcul": [0, 4], "expect": [0, 2, 3, 4, 11, 12], "valu": [0, 1, 2, 4, 6, 9, 11, 12], "observ": [0, 2, 3, 4, 7, 11], "implement": [0, 7, 9, 12], "arxiv": [0, 7, 12], "2005": [0, 7, 12], "10189": 0, "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "device_backend": [0, 7], "devic": [0, 4, 8, 12], "experi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12], "ar": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12], "default": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12], "run": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12], "through": [0, 1, 2, 4, 5], "simul": [0, 7], "characteris": [0, 4, 5, 7, 8, 10], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "gate": [0, 1, 3, 4, 7, 12], "ansatz": [0, 2, 4, 11], "left": 0, "non": 0, "sampl": [0, 1], "becom": 0, "vice": 0, "versa": 0, "each": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11], "time": [0, 4, 9, 12], "new": [0, 4, 5, 7, 10, 11], "state": [0, 2, 7, 8], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "gener": [0, 4, 5, 7, 8, 9, 12], "total": [0, 5], "kei": [0, 1, 3, 4, 7, 9, 10, 11, 12], "states_simulator_mitex": 0, "noiseless": 0, "execut": [0, 2, 4, 5, 6, 8, 10, 11], "basic": [0, 2, 4], "compil": [0, 4, 5, 7, 12], "states_device_mitex": 0, "noisi": [0, 7], "experiment_mitex": 0, "actual": 0, "some": [0, 1, 2, 4, 5, 8, 10, 11], "model": 0, "_polycdrcorrect": 0, "1": [0, 2, 4, 5, 8, 9, 12], "see": [0, 2, 12], "cdr_post": 0, "py": 0, "other": [0, 8, 11], "option": [0, 4, 12], "likelihood_funct": 0, "likelihoodfunct": [0, 2], "us": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12], "filter": [0, 9], "result": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12], "given": [0, 1, 4, 5, 7, 8, 9, 11, 12], "enum": [0, 1, 8], "set": [0, 1, 2, 4, 7, 8, 10, 11, 12], "none": [0, 4, 5, 7, 10, 11], "toler": 0, "can": [0, 2, 4, 9, 12], "perturb": 0, "calibr": [0, 8], "have": [0, 1, 2, 5, 8, 9, 10, 11], "exact": [0, 12], "too": [0, 12], "close": [0, 12], "thi": [0, 1, 2, 4, 5, 7, 9, 10, 11, 12], "distanc": 0, "between": [0, 2, 4, 5, 8, 10, 11], "which": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12], "least": 0, "should": [0, 1, 4, 5, 7, 8, 9, 11, 12], "distance_toler": 0, "The": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12], "absolut": 0, "origin": [0, 1, 5, 7, 12], "calibration_fract": 0, "upper": 0, "bound": 0, "fraction": 0, "far": 0, "from": [0, 2, 4, 5, 7, 8, 9, 10, 11, 12], "class": [0, 1, 2, 4, 5, 6, 9, 10, 11, 12], "an": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "enumer": [0, 1], "qpo_noisi": 0, "qubitpaulioper": [0, 2, 4, 6, 9, 10, 11], "qpo_exact": 0, "float": [0, 6, 9, 10, 11, 12], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "probabl": [0, 7], "accept": 0, "choic": [0, 4], "alwai": 0, "mean": [0, 2, 12], "ani": [0, 1, 2, 4, 9, 10, 11], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "dfsc": [0, 2], "gen_dfsc_mitex": [0, 2], "all": [0, 1, 3, 5, 7, 8, 9, 10, 11], "characterisation_mitex": 0, "characteriast": [0, 8], "automat": 0, "correct": [0, 2, 7, 8], "ccl_state_task_gen": [0, 2], "max_state_circuits_attempt": 0, "mittask": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12], "prepar": [0, 2], "first": [0, 1, 10], "wire": [0, 1, 4, 5, 8, 9, 10, 12], "second": 0, "third": 0, "remain": 0, "guid": 0, "properti": [0, 10, 11], "maximum": [0, 4, 5], "attempt": 0, "list": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "significantli": 0, "differ": [0, 4, 5, 8, 11], "befor": [0, 7, 11], "resort": 0, "similar": [0, 1], "ccl_result_batching_task_gen": [0, 2], "For": [0, 2, 5, 10, 11, 12], "pair": [0, 7], "up": [0, 2], "singl": [0, 1, 4, 5, 7, 8, 10, 11], "n_state_circuit": 0, "initi": [0, 5, 7, 12], "organis": 0, "requir": [0, 2, 3, 4, 6, 7, 8, 11], "ccl_likelihood_filtering_task_gen": [0, 2], "reject": 0, "function": [0, 2, 4, 5, 6, 9, 10, 12], "must": [0, 8, 10, 11, 12], "take": [0, 1, 2, 3, 5, 7, 8, 9, 11], "two": [0, 2, 7, 12], "0": [0, 2, 7, 9], "answer": 0, "seed": [0, 7], "likelihood": 0, "remov": [0, 11], "under": [0, 2], "condit": 0, "dfsc_circuit_task_gen": [0, 2], "ha": [0, 2, 4, 5, 11, 12], "symbol": [0, 2, 4, 9, 11], "substitut": [0, 4, 9, 10, 11], "angl": [0, 1], "case": [0, 12], "": [0, 2, 8, 11], "If": [0, 2, 5, 10, 11], "error": [0, 2, 7, 8, 11], "thrown": 0, "observabletrack": [0, 2, 3, 4, 11], "form": [0, 2, 11, 12], "measur": [0, 2, 3, 4, 8, 11], "ad": [0, 3, 4, 5, 6, 7, 10, 11], "qubit": [0, 2, 4, 6, 7, 8, 10, 11, 12], "pauli": [0, 2, 4, 7, 11], "string": [0, 4, 6, 11], "oper": [0, 2, 4, 11], "dfsc_collater_task_gen": [0, 2], "pass": [0, 1, 4, 5, 8, 10, 11], "combin": [0, 5], "eigenst": 0, "qubitpaulistr": [0, 2, 4, 9, 11], "via": [0, 3, 4, 7, 11], "sever": [0, 2, 5], "nest": 0, "task": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12], "unpackag": 0, "suitabl": [0, 1, 4, 5], "input": [0, 1, 4, 5, 6, 7, 9, 10, 12], "It": [0, 4, 5, 12], "also": [0, 2, 4, 5, 10], "store": [0, 4, 8, 10, 11], "inform": [0, 2, 4, 10, 11], "out": [0, 4, 5, 10], "collat": [0, 1, 4, 7], "mani": [0, 12], "backendresult": [0, 1, 2, 5, 6, 8, 10, 11], "frame": [0, 1, 2, 7], "randomis": [0, 1, 2], "instanc": [0, 1], "convert": [0, 4, 7, 9, 11], "them": [0, 4, 7, 8, 10], "dfsc_characterisation_task_gen": [0, 2], "dfsc_correction_task_gen": [0, 2], "greater": 0, "than": [0, 5, 9, 10, 12], "threshold": 0, "divid": [0, 5], "depolar": 0, "nois": [0, 1, 2, 8, 12], "zero_threshold": 0, "doe": [0, 2, 5, 7], "zero": [0, 2, 12], "limit": [0, 12], "correctoin": 0, "gen_frame_randomisation_mitr": [1, 2], "mitr": [1, 2, 4, 8], "framerandomis": [1, 2], "techniqu": [1, 3, 12], "built": [1, 3], "around": [1, 3, 7], "specifi": [1, 8, 9, 12], "universalframerandomis": 1, "pauliframerandomis": 1, "shot": [1, 2, 4, 5, 8], "circuitshot": [1, 2, 4, 5, 6, 8, 10], "pytket": [1, 2, 3, 4, 5, 11], "tailor": 1, "correspond": [1, 4, 5, 8], "rebas": [1, 7], "whole": 1, "cycl": 1, "possibl": [1, 7], "addit": [1, 4], "assumpt": 1, "top": 1, "regular": 1, "rz": [1, 2], "x": [1, 2, 12], "incur": 1, "frame_randomisation_circuits_task_gen": [1, 2], "_fr_type": 1, "frame_randomisation_result_task_gen": [1, 2], "sequenti": [1, 2, 10], "These": [1, 7, 9], "includ": [1, 2, 7, 11, 12], "creat": [1, 7, 9, 11], "place": 1, "python": 2, "modul": [2, 3], "protocol": 2, "quantum": [2, 4], "comput": [2, 7, 10], "cqc": 2, "interfac": [2, 11], "tket": 2, "program": 2, "tool": 2, "numer": 2, "provid": [2, 8], "easi": 2, "compos": 2, "practic": 2, "straightforward": 2, "multipl": [2, 4, 11], "where": [2, 4, 5, 7, 8, 10, 12], "appropri": [2, 9, 12], "compat": 2, "To": [2, 4, 10], "instal": 2, "pip": 2, "simpli": 2, "import": 2, "your": 2, "code": 2, "interact": 2, "notebook": 2, "fit": [2, 12], "distinct": 2, "modif": 2, "distribut": 2, "count": [2, 5, 11, 12], "retriev": [2, 5], "In": [2, 7, 9, 10, 12], "capac": 2, "without": [2, 4], "extens": [2, 4, 5], "qiskit": 2, "aerbackend": 2, "c": [2, 12], "2": [2, 7, 8, 9, 12], "h": 2, "25": 2, "cx": [2, 3, 7], "measure_al": 2, "50": 2, "print": 2, "get_count": 2, "counter": 2, "argument": [2, 4, 5, 6, 10], "element": 2, "hold": [2, 4, 5, 6, 10, 11], "graph": [2, 3, 10, 12], "taskgraph": [2, 4, 5, 6, 11], "A": [2, 4, 5, 6, 8, 11, 12], "pure": [2, 4, 5, 6, 10], "step": 2, "typic": 2, "call": [2, 4, 5, 6, 7, 10], "topolog": [2, 10], "sort": [2, 10], "order": [2, 9, 10, 11, 12], "its": [2, 4, 5, 10, 11], "construct": [2, 7], "defin": [2, 4, 5, 6, 7, 10, 11], "get_task_graph": [2, 10], "similarli": 2, "estim": [2, 11], "desir": [2, 4], "ansatzcircuit": [2, 4, 6, 10], "observableexperi": [2, 4, 6, 7, 9, 10], "util": 2, "qubit_pauli_str": 2, "z": [2, 12], "qubit_pauli_oper": [2, 11], "ansatz_circuit": 2, "3": [2, 12], "symbolsdict": [2, 4, 11], "mitex_result": 2, "zq": 2, "00000000000000": 2, "contain": [2, 4, 5, 11], "dictionari": [2, 4, 9, 10, 11], "detail": 2, "being": [2, 4, 11], "intern": [2, 5, 10], "version": 2, "achiev": [2, 12], "append": [2, 4, 10], "manual": 2, "extend": [2, 11], "tutori": 2, "pre": 2, "current": 2, "follow": [2, 12], "scheme": 2, "commonli": 2, "known": 2, "name": [2, 4, 5, 10], "spam": 2, "extrapol": [2, 12], "probabilist": [2, 7], "cancel": [2, 7], "depolaris": 2, "factor": [2, 9, 12], "supress": 2, "nearest": 2, "you": [2, 8], "problem": 2, "think": 2, "found": 2, "bug": 2, "wai": 2, "contact": 2, "u": [2, 9], "write": [2, 3], "email": 2, "cambridgequantum": 2, "com": 2, "ask": 2, "help": 2, "report": 2, "github": 2, "we": 2, "pick": 2, "look": 2, "page": 2, "so": [2, 5, 7, 12], "alreadi": [2, 11], "been": [2, 5, 12], "someon": 2, "els": 2, "backend_compile_circuit_shots_task_gen": [2, 5], "backend_handle_task_gen": [2, 5], "backend_res_task_gen": [2, 5], "gen_shot_split_mitr": [2, 5], "split_shots_task_gen": [2, 5], "group_shots_task_gen": [2, 5], "gen_compiled_mitr": [2, 4], "gen_compiled_shot_split_mitr": [2, 4], "get_basic_measurement_circuit": [2, 4], "filter_observable_tracker_task_gen": [2, 4], "collate_circuit_shots_task_gen": [2, 4], "split_results_task_gen": [2, 4], "get_expectations_task_gen": [2, 4], "measurementcircuit": [2, 4, 11], "iotask": [2, 6], "measurement_reduct": 2, "measurement_reduction_task_gen": [2, 3], "gen_measurementreduction_mitex": [2, 3], "spam_mitr": [2, 8], "gen_fullycorrelated_spam_mitr": [2, 8], "gen_uncorrelated_spam_mitr": [2, 8], "full_spam_correct": [2, 8], "gen_full_tomography_spam_circuits_task": [2, 8], "gen_full_tomography_spam_characterisation_task": [2, 8], "gen_full_tomography_spam_correction_task": [2, 8], "gen_get_bit_maps_task": [2, 8], "frame_randomis": 2, "clifford_noise_characteris": 2, "zero_noise_extrapol": 2, "zne": [2, 12], "gen_zne_mitex": [2, 12], "fold": [2, 12], "digital_folding_task_gen": [2, 12], "extrapolation_task_gen": [2, 12], "gen_initial_compilation_task": [2, 12], "gen_qubit_relabel_task": [2, 12], "gen_duplication_task": [2, 12], "probabilistic_error_cancel": 2, "pec_learning_bas": [2, 7], "gen_pec_learning_based_mitex": [2, 7], "gen_rebase_to_frames_and_comput": [2, 7], "gen_run_with_quasi_prob": [2, 7], "collate_results_task_gen": [2, 7], "learn_quasi_probs_task_gen": [2, 7], "gen_get_clifford_training_set": [2, 7], "gen_label_g": [2, 7], "gen_wrap_frame_g": [2, 7], "gen_get_noisy_circuit": [2, 7], "spectral_filt": 2, "gen_spectral_filtering_mitex": [2, 9], "gen_result_extraction_task": [2, 9], "gen_mitigation_task": [2, 9], "gen_fft_task": [2, 9], "gen_ndarray_to_dict_task": [2, 9], "gen_inv_fft_task": [2, 9], "gen_flatten_task": [2, 9], "gen_reshape_task": [2, 9], "gen_obs_exp_grid_gen_task": [2, 9], "gen_symbol_val_gen_task": [2, 9], "gen_wire_copy_task": [2, 9], "gen_param_grid_gen_task": [2, 9], "smallcoefficientsignalfilt": [2, 9], "signalfilt": [2, 9], "graphcolourmethod": 3, "cx_config": 3, "cxconfigtyp": 3, "reduct": 3, "avail": [3, 12], "partit": [3, 11], "reduc": [3, 4, 9], "strategi": 3, "paulipartitionstrat": 3, "colour": 3, "configur": 3, "diagonlis": 3, "same": [3, 4, 5, 8, 9, 10], "prepend": [3, 4, 5, 10], "perform": [3, 7, 8, 9, 12], "_label": [4, 5, 6, 10], "str": [4, 5, 6, 10, 11], "individu": [4, 5], "__call__": [4, 5, 6, 10], "experiment_wir": 4, "dict": [4, 5, 6, 10, 11], "tupl": [4, 5, 6, 10, 11], "self": [4, 5, 6, 10, 11], "__init__": [4, 5, 6, 10, 11], "howev": 4, "constructor": [4, 5, 11], "label": [4, 5, 6, 7], "identif": [4, 5, 10], "__str__": [4, 5, 6, 10, 11], "add_n_wir": [4, 5, 10], "num_wir": [4, 5, 10], "request": [4, 5, 12], "add": [4, 5, 10, 11], "edg": [4, 5, 10], "vertex": [4, 5, 10], "output": [4, 5, 6, 9, 10], "restrict": [4, 5, 10], "Not": [4, 5], "permit": [4, 5, 10], "rais": [4, 5, 7, 12], "typeerror": [4, 5], "vertic": [4, 5, 10], "add_wir": [4, 5, 10], "check_append_wir": [4, 5, 10], "bool": [4, 5, 6, 10, 11, 12], "confirm": [4, 5, 10], "equal": [4, 5, 9], "check": [4, 5, 11], "attribut": [4, 5, 6, 10, 11], "union": [4, 5, 10, 11], "true": [4, 5, 10, 11], "fals": [4, 5, 10, 11], "check_prepend_wir": [4, 5, 10], "from_taskgraph": [4, 5, 10], "task_graph": [4, 5, 10], "copi": [4, 5, 9, 10, 11], "parallel": [4, 5, 10], "mitex_wir": 4, "overload": [4, 5], "conta": 4, "taken": [4, 9], "later": [4, 5, 7, 10], "present": 4, "e": [4, 11, 12], "keep": 4, "until": [4, 10, 12], "benefit": 4, "abl": 4, "parameteris": [4, 11], "interest": [4, 11], "coeffici": [4, 9, 11], "pertain": 4, "minimum": 4, "amount": [4, 12], "run_bas": 4, "simplifi": 4, "here": [4, 7], "just": [4, 11], "optimisation_level": [4, 5, 7, 12], "compile_circuit": [4, 5], "optimisaion": 4, "level": [4, 5, 7, 12], "max_shot": [4, 5], "split": [4, 5], "optimis": [4, 5, 7], "job": [4, 5], "bit": [4, 6, 8, 10, 11], "basi": 4, "chang": [4, 7, 12], "everi": [4, 5, 9], "own": 4, "improv": 4, "parallelis": 4, "queue": 4, "queu": 4, "wherein": [4, 5], "multipli": 4, "circuits_wir": 5, "apppend": 5, "circuit_shot": 5, "said": 5, "circuit_shotss": 5, "circuit_wir": 5, "handl": 5, "get": [5, 11], "resulthandl": [5, 6, 10], "wrap": [5, 7, 10], "ensur": [5, 12], "never": 5, "exce": 5, "over": [5, 11], "necessari": [5, 12], "higher": 5, "match": [5, 10, 11, 12], "per": 5, "smaller": 5, "ones": 5, "group": 5, "togeth": 5, "larger": 5, "could": 5, "merg": [5, 7], "_n_in_wir": 6, "_n_out_wir": 6, "_method": [6, 10], "callabl": [6, 10], "node": [6, 8, 10, 12], "compris": 6, "identifi": 6, "input_wir": [6, 10], "__repr__": [6, 10, 11], "repr": [6, 10, 11], "__weakref__": [6, 10, 11], "weak": [6, 10, 11], "refer": [6, 10, 11], "simpl": 6, "base": [7, 9], "pec": 7, "introduc": 7, "http": [7, 12], "org": [7, 12], "ab": [7, 12], "07601": 7, "ideal": 7, "vector": 7, "simulator_mitex": 7, "device_mitex": 7, "np": 7, "random": [7, 12], "num_cliff": 7, "primari": 7, "10": 7, "runtimeerror": [7, 12], "cz": 7, "particular": 7, "quasi": 7, "facilit": 7, "quasiprob": 7, "itself": 7, "deduc": 7, "real": 7, "num_cliff_circ": 7, "num_rand_cliff": 7, "replac": [7, 12], "fix": 7, "either": [7, 10], "ident": [7, 12], "circut": 7, "build": 7, "one": [7, 11, 12], "recreat": 7, "note": [7, 12], "produs": 7, "calibration_shot": 8, "correl": 8, "subset": 8, "fulli": 8, "n": [8, 9], "size": 8, "largest": 8, "sublist": 8, "qubit_subset": 8, "accord": 8, "within": 8, "assum": [8, 12], "onli": [8, 10, 12], "thu": 8, "allow": [8, 12], "associ": [8, 11], "stateinfo": 8, "transit": 8, "matric": 8, "held": [8, 10, 11], "invert": [8, 11], "correctionmethod": 8, "corr_method": 8, "map": [8, 11], "betwen": 8, "n_val": 9, "spectral": 9, "act": 9, "evalu": 9, "grid": 9, "landscap": 9, "space": 9, "rang": 9, "03c0": 9, "permut": 9, "point": [9, 10, 12], "give": [9, 11], "signal_filt": 9, "extract": 9, "coordin": 9, "interpol": 9, "fourier": 9, "signal": 9, "fast": 9, "transform": [9, 12], "reshap": 9, "arrai": 9, "invers": 9, "ndarrai": [9, 11], "sequenc": [9, 12], "effect": 9, "revers": [9, 12], "meshgrid": 9, "uniformli": 9, "interv": 9, "pi": 9, "full": [9, 10], "coverag": 9, "bloch": 9, "sphere": 9, "dimens": 9, "context": 9, "sai": [9, 12], "n_sym_val": 9, "n_wire_copi": 9, "repeat": [9, 10], "n_in_wir": [9, 10], "coppi": 9, "tol": 9, "child": 9, "small": 9, "fft_result_val_grid": 9, "dtype": 9, "float64": 9, "thei": [9, 12], "less": [9, 10, 12], "networkx": 10, "though": 10, "succes": 10, "port": 10, "attach": 10, "insert": 10, "end": 10, "_task_graph": 10, "propos": 10, "decompose_taskgraph_nod": 10, "structur": 10, "insid": 10, "anoth": 10, "get_cach": 10, "ordereddict": [10, 11], "after": [10, 12], "cach": 10, "gv": 10, "digraph": 10, "visual": 10, "represent": [10, 11], "dag": 10, "graphviz": 10, "n_out_wir": 10, "out_edg": 10, "start": 10, "specif": 10, "assign": [10, 11], "more": 10, "like": 10, "fail": 10, "undergo": 10, "process": [10, 12], "wil": 10, "label_": 10, "both": 10, "view_task_graph": 10, "view": 10, "helper": 11, "standardis": 11, "kind": 11, "access": 11, "_symbolic_map": 11, "accessor": 11, "modifi": 11, "empti": 11, "futur": 11, "add_symbol": 11, "sympi": 11, "add_valu": 11, "throw": 11, "get_symbolic_map": 11, "symbol_valu": 11, "set_valu": 11, "orderd": 11, "classmethod": 11, "symbols_from_circuit": 11, "captur": 11, "free": 11, "potenti": 11, "symbols_from_dict": 11, "symbol_dict": 11, "mit_symbol": 11, "straight": 11, "symbols_from_list": 11, "symbols_list": 11, "iter": 11, "repres": 11, "entri": 11, "symbolic_circuit": 11, "instanti": 11, "mai": [11, 12], "oracl": 11, "get_parametric_circuit": 11, "symboldict": 11, "along": 11, "retain": 11, "add_measurement_circuit": 11, "measurement_info": 11, "_measurement_circuit": 11, "updat": 11, "whether": 11, "measurementinfo": 11, "signifi": 11, "check_str": 11, "exist": 11, "clear": 11, "eras": 11, "extend_oper": 11, "new_oper": 11, "_qubit_pauli_oper": 11, "from_observabletrack": 11, "to_copi": 11, "altern": 11, "make": 11, "get_empty_str": 11, "don": 11, "t": 11, "get_expect": 11, "_qps_to_indic": 11, "deriv": 11, "pariti": 11, "get_measurement_circuit": 11, "find": 11, "undefin": 11, "measurement_circuit": 11, "attirbut": 11, "modify_coeffici": 11, "new_coeffici": 11, "remove_str": 11, "index": 11, "longer": 11, "noise_scaling_list": 12, "amplifi": 12, "increment": 12, "arriv": 12, "backward": 12, "further": 12, "explanant": 12, "10921": 12, "scale": 12, "increas": 12, "unitari": 12, "noise_sc": 12, "cc": 12, "As": 12, "odd": 12, "integ": 12, "unchang": 12, "circ": 12, "valueerror": 12, "g": 12, "gg": 12, "suffici": 12, "_allow_approx_fold": 12, "oppos": 12, "exactli": 12, "cannot": 12, "occur": 12, "due": 12, "discret": 12, "avoid": 12, "odd_gat": 12, "two_qubit_g": 12, "implicitli": 12, "domin": 12, "box": 12, "cube_root": 12, "y": 12, "_show_fit": 12, "arg": 12, "cube": 12, "root": 12, "b": 12, "plot": 12, "best": 12, "exponenti": 12, "special": 12, "poli": 12, "linear": 12, "ax": 12, "polynomi": 12, "poly_exponenti": 12, "deg": 12, "degre": 12, "neg": 12, "high": 12, "richardson": 12, "_folding_typ": 12, "those": 12, "_fit_typ": 12, "relabel": 12, "dure": 12, "duplic": 12}, "objects": {"qermit.clifford_noise_characterisation.ccl": [[0, 0, 1, "", "LikelihoodFunction"], [0, 1, 1, "", "ccl_likelihood_filtering_task_gen"], [0, 1, 1, "", "ccl_result_batching_task_gen"], [0, 1, 1, "", "ccl_state_task_gen"], [0, 1, 1, "", "gen_CDR_MitEx"]], "qermit.clifford_noise_characterisation.ccl.LikelihoodFunction": [[0, 1, 1, "", "none"]], "qermit.clifford_noise_characterisation.dfsc": [[0, 1, 1, "", "DFSC_characterisation_task_gen"], [0, 1, 1, "", "DFSC_circuit_task_gen"], [0, 1, 1, "", "DFSC_collater_task_gen"], [0, 1, 1, "", "DFSC_correction_task_gen"], [0, 1, 1, "", "gen_DFSC_MitEx"]], "qermit.frame_randomisation.frame_randomisation": [[1, 0, 1, "", "FrameRandomisation"], [1, 1, 1, "", "frame_randomisation_circuits_task_gen"], [1, 1, 1, "", "frame_randomisation_result_task_gen"], [1, 1, 1, "", "gen_Frame_Randomisation_MitRes"]], "qermit.frame_randomisation.frame_randomisation.FrameRandomisation": [[1, 1, 1, "", "PauliFrameRandomisation"], [1, 1, 1, "", "UniversalFrameRandomisation"]], "qermit.probabilistic_error_cancellation.pec_learning_based": [[7, 1, 1, "", "collate_results_task_gen"], [7, 1, 1, "", "gen_PEC_learning_based_MitEx"], [7, 1, 1, "", "gen_get_clifford_training_set"], [7, 1, 1, "", "gen_get_noisy_circuits"], [7, 1, 1, "", "gen_label_gates"], [7, 1, 1, "", "gen_rebase_to_frames_and_computing"], [7, 1, 1, "", "gen_run_with_quasi_prob"], [7, 1, 1, "", "gen_wrap_frame_gates"], [7, 1, 1, "", "learn_quasi_probs_task_gen"]], "qermit.spam.full_spam_correction": [[8, 1, 1, "", "gen_full_tomography_spam_characterisation_task"], [8, 1, 1, "", "gen_full_tomography_spam_circuits_task"], [8, 1, 1, "", "gen_full_tomography_spam_correction_task"], [8, 1, 1, "", "gen_get_bit_maps_task"]], "qermit.spam.spam_mitres": [[8, 1, 1, "", "gen_FullyCorrelated_SPAM_MitRes"], [8, 1, 1, "", "gen_UnCorrelated_SPAM_MitRes"]], "qermit.spectral_filtering.signal_filter": [[9, 0, 1, "", "SignalFilter"], [9, 0, 1, "", "SmallCoefficientSignalFilter"]], "qermit.spectral_filtering.signal_filter.SignalFilter": [[9, 1, 1, "", "filter"]], "qermit.spectral_filtering.signal_filter.SmallCoefficientSignalFilter": [[9, 1, 1, "", "filter"]], "qermit.spectral_filtering.spectral_filtering": [[9, 1, 1, "", "gen_fft_task"], [9, 1, 1, "", "gen_flatten_task"], [9, 1, 1, "", "gen_inv_fft_task"], [9, 1, 1, "", "gen_mitigation_task"], [9, 1, 1, "", "gen_ndarray_to_dict_task"], [9, 1, 1, "", "gen_obs_exp_grid_gen_task"], [9, 1, 1, "", "gen_param_grid_gen_task"], [9, 1, 1, "", "gen_reshape_task"], [9, 1, 1, "", "gen_result_extraction_task"], [9, 1, 1, "", "gen_spectral_filtering_MitEx"], [9, 1, 1, "", "gen_symbol_val_gen_task"], [9, 1, 1, "", "gen_wire_copy_task"]], "qermit.taskgraph.measurement_reduction": [[3, 1, 1, "", "gen_MeasurementReduction_MitEx"], [3, 1, 1, "", "measurement_reduction_task_gen"]], "qermit.taskgraph.mitex": [[4, 0, 1, "", "MitEx"], [4, 1, 1, "", "collate_circuit_shots_task_gen"], [4, 1, 1, "", "filter_observable_tracker_task_gen"], [4, 1, 1, "", "gen_compiled_MitRes"], [4, 1, 1, "", "gen_compiled_shot_split_MitRes"], [4, 1, 1, "", "get_basic_measurement_circuit"], [4, 1, 1, "", "get_expectations_task_gen"], [4, 1, 1, "", "split_results_task_gen"]], "qermit.taskgraph.mitex.MitEx": [[4, 1, 1, "", "__call__"], [4, 1, 1, "", "__init__"], [4, 1, 1, "", "__str__"], [4, 1, 1, "", "add_n_wires"], [4, 1, 1, "", "add_wire"], [4, 1, 1, "", "check_append_wires"], [4, 1, 1, "", "check_prepend_wires"], [4, 1, 1, "", "from_TaskGraph"], [4, 1, 1, "", "parallel"], [4, 1, 1, "", "run"], [4, 1, 1, "", "run_basic"]], "qermit.taskgraph.mitres": [[5, 0, 1, "", "MitRes"], [5, 1, 1, "", "backend_compile_circuit_shots_task_gen"], [5, 1, 1, "", "backend_handle_task_gen"], [5, 1, 1, "", "backend_res_task_gen"], [5, 1, 1, "", "gen_shot_split_MitRes"], [5, 1, 1, "", "group_shots_task_gen"], [5, 1, 1, "", "split_shots_task_gen"]], "qermit.taskgraph.mitres.MitRes": [[5, 1, 1, "", "__call__"], [5, 1, 1, "", "__init__"], [5, 1, 1, "", "__str__"], [5, 1, 1, "", "add_n_wires"], [5, 1, 1, "", "add_wire"], [5, 1, 1, "", "check_append_wires"], [5, 1, 1, "", "check_prepend_wires"], [5, 1, 1, "", "from_TaskGraph"], [5, 1, 1, "", "parallel"], [5, 1, 1, "", "run"]], "qermit.taskgraph.mittask": [[6, 0, 1, "", "IOTask"], [6, 0, 1, "", "MitTask"]], "qermit.taskgraph.mittask.MitTask": [[6, 1, 1, "", "__call__"], [6, 1, 1, "", "__init__"], [6, 1, 1, "", "__repr__"], [6, 1, 1, "", "__str__"], [6, 2, 1, "", "__weakref__"]], "qermit.taskgraph.task_graph": [[10, 0, 1, "", "TaskGraph"]], "qermit.taskgraph.task_graph.TaskGraph": [[10, 1, 1, "", "__call__"], [10, 1, 1, "", "__init__"], [10, 1, 1, "", "__repr__"], [10, 1, 1, "", "__str__"], [10, 2, 1, "", "__weakref__"], [10, 1, 1, "", "add_n_wires"], [10, 1, 1, "", "add_wire"], [10, 1, 1, "", "append"], [10, 1, 1, "", "check_append_wires"], [10, 1, 1, "", "check_prepend_wires"], [10, 1, 1, "", "decompose_TaskGraph_nodes"], [10, 1, 1, "", "from_TaskGraph"], [10, 1, 1, "", "get_cache"], [10, 1, 1, "", "get_task_graph"], [10, 3, 1, "", "n_in_wires"], [10, 3, 1, "", "n_out_wires"], [10, 1, 1, "", "parallel"], [10, 1, 1, "", "prepend"], [10, 1, 1, "", "run"], [10, 3, 1, "", "tasks"], [10, 1, 1, "", "view_task_graph"]], "qermit.taskgraph.utils": [[11, 0, 1, "", "MeasurementCircuit"], [11, 0, 1, "", "ObservableTracker"], [11, 0, 1, "", "SymbolsDict"]], "qermit.taskgraph.utils.MeasurementCircuit": [[11, 1, 1, "", "__init__"], [11, 2, 1, "", "__weakref__"], [11, 3, 1, "", "circuit"], [11, 1, 1, "", "get_parametric_circuit"], [11, 3, 1, "", "symbols"]], "qermit.taskgraph.utils.ObservableTracker": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "__repr__"], [11, 1, 1, "", "__str__"], [11, 2, 1, "", "__weakref__"], [11, 1, 1, "", "add_measurement_circuit"], [11, 1, 1, "", "check_string"], [11, 1, 1, "", "clear"], [11, 1, 1, "", "extend_operator"], [11, 1, 1, "", "from_ObservableTracker"], [11, 1, 1, "", "get_empty_strings"], [11, 1, 1, "", "get_expectations"], [11, 1, 1, "", "get_measurement_circuits"], [11, 3, 1, "", "measurement_circuits"], [11, 1, 1, "", "modify_coefficients"], [11, 3, 1, "", "qubit_pauli_operator"], [11, 1, 1, "", "remove_strings"]], "qermit.taskgraph.utils.SymbolsDict": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "__repr__"], [11, 1, 1, "", "__str__"], [11, 2, 1, "", "__weakref__"], [11, 1, 1, "", "add_symbol"], [11, 1, 1, "", "add_value"], [11, 1, 1, "", "get_symbolic_map"], [11, 1, 1, "", "set_values"], [11, 1, 1, "", "symbols_from_circuit"], [11, 1, 1, "", "symbols_from_dict"], [11, 1, 1, "", "symbols_from_list"], [11, 3, 1, "", "symbols_list"]], "qermit.zero_noise_extrapolation.zne": [[12, 0, 1, "", "Fit"], [12, 0, 1, "", "Folding"], [12, 1, 1, "", "digital_folding_task_gen"], [12, 1, 1, "", "extrapolation_task_gen"], [12, 1, 1, "", "gen_ZNE_MitEx"], [12, 1, 1, "", "gen_duplication_task"], [12, 1, 1, "", "gen_initial_compilation_task"], [12, 1, 1, "", "gen_qubit_relabel_task"]], "qermit.zero_noise_extrapolation.zne.Fit": [[12, 1, 1, "", "cube_root"], [12, 1, 1, "", "exponential"], [12, 1, 1, "", "linear"], [12, 1, 1, "", "poly_exponential"], [12, 1, 1, "", "polynomial"], [12, 1, 1, "", "richardson"]], "qermit.zero_noise_extrapolation.zne.Folding": [[12, 1, 1, "", "circuit"], [12, 1, 1, "", "gate"], [12, 1, 1, "", "odd_gate"], [12, 1, 1, "", "two_qubit_gate"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"]}, "titleterms": {"qermit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "clifford_noise_characteris": 0, "frame_randomis": 1, "user": 2, "support": 2, "api": 2, "refer": 2, "measurement_reduct": 3, "mitex": 4, "mitr": 5, "mittask": 6, "probabilistic_error_cancel": 7, "spam": 8, "spectral_filt": 9, "taskgraph": 10, "util": 11, "zero_noise_extrapol": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"qermit.clifford_noise_characterisation": [[0, "qermit-clifford-noise-characterisation"]], "qermit.frame_randomisation": [[1, "qermit-frame-randomisation"]], "Qermit": [[2, "qermit"]], "User Support": [[2, "user-support"]], "API Reference:": [[2, null]], "qermit.measurement_reduction": [[3, "qermit-measurement-reduction"]], "qermit.mitex": [[4, "qermit-mitex"]], "qermit.mitres": [[5, "qermit-mitres"]], "qermit.mittask": [[6, "qermit-mittask"]], "qermit.probabilistic_error_cancellation": [[7, "qermit-probabilistic-error-cancellation"]], "qermit.spam": [[8, "qermit-spam"]], "qermit.spectral_filtering": [[9, "qermit-spectral-filtering"]], "qermit.taskgraph": [[10, "qermit-taskgraph"]], "qermit.utils": [[11, "qermit-utils"]], "qermit.zero_noise_extrapolation": [[12, "qermit-zero-noise-extrapolation"]]}, "indexentries": {"dfsc_characterisation_task_gen() (qermit.clifford_noise_characterisation.dfsc method)": [[0, "qermit.clifford_noise_characterisation.dfsc.DFSC_characterisation_task_gen"]], "dfsc_circuit_task_gen() (qermit.clifford_noise_characterisation.dfsc method)": [[0, "qermit.clifford_noise_characterisation.dfsc.DFSC_circuit_task_gen"]], "dfsc_collater_task_gen() (qermit.clifford_noise_characterisation.dfsc method)": [[0, "qermit.clifford_noise_characterisation.dfsc.DFSC_collater_task_gen"]], "dfsc_correction_task_gen() (qermit.clifford_noise_characterisation.dfsc method)": [[0, "qermit.clifford_noise_characterisation.dfsc.DFSC_correction_task_gen"]], "likelihoodfunction (class in qermit.clifford_noise_characterisation.ccl)": [[0, "qermit.clifford_noise_characterisation.ccl.LikelihoodFunction"]], "ccl_likelihood_filtering_task_gen() (qermit.clifford_noise_characterisation.ccl method)": [[0, "qermit.clifford_noise_characterisation.ccl.ccl_likelihood_filtering_task_gen"]], "ccl_result_batching_task_gen() (qermit.clifford_noise_characterisation.ccl method)": [[0, "qermit.clifford_noise_characterisation.ccl.ccl_result_batching_task_gen"]], "ccl_state_task_gen() (qermit.clifford_noise_characterisation.ccl method)": [[0, "qermit.clifford_noise_characterisation.ccl.ccl_state_task_gen"]], "gen_cdr_mitex() (qermit.clifford_noise_characterisation.ccl method)": [[0, "qermit.clifford_noise_characterisation.ccl.gen_CDR_MitEx"]], "gen_dfsc_mitex() (qermit.clifford_noise_characterisation.dfsc method)": [[0, "qermit.clifford_noise_characterisation.dfsc.gen_DFSC_MitEx"]], "none() (qermit.clifford_noise_characterisation.ccl.likelihoodfunction method)": [[0, "qermit.clifford_noise_characterisation.ccl.LikelihoodFunction.none"]], "framerandomisation (class in qermit.frame_randomisation.frame_randomisation)": [[1, "qermit.frame_randomisation.frame_randomisation.FrameRandomisation"]], "pauliframerandomisation() (qermit.frame_randomisation.frame_randomisation.framerandomisation method)": [[1, "qermit.frame_randomisation.frame_randomisation.FrameRandomisation.PauliFrameRandomisation"]], "universalframerandomisation() (qermit.frame_randomisation.frame_randomisation.framerandomisation method)": [[1, "qermit.frame_randomisation.frame_randomisation.FrameRandomisation.UniversalFrameRandomisation"]], "frame_randomisation_circuits_task_gen() (qermit.frame_randomisation.frame_randomisation method)": [[1, "qermit.frame_randomisation.frame_randomisation.frame_randomisation_circuits_task_gen"]], "frame_randomisation_result_task_gen() (qermit.frame_randomisation.frame_randomisation method)": [[1, "qermit.frame_randomisation.frame_randomisation.frame_randomisation_result_task_gen"]], "gen_frame_randomisation_mitres() (qermit.frame_randomisation.frame_randomisation method)": [[1, "qermit.frame_randomisation.frame_randomisation.gen_Frame_Randomisation_MitRes"]], "gen_measurementreduction_mitex() (qermit.taskgraph.measurement_reduction method)": [[3, "qermit.taskgraph.measurement_reduction.gen_MeasurementReduction_MitEx"]], "measurement_reduction_task_gen() (qermit.taskgraph.measurement_reduction method)": [[3, "qermit.taskgraph.measurement_reduction.measurement_reduction_task_gen"]], "mitex (class in qermit.taskgraph.mitex)": [[4, "qermit.taskgraph.mitex.MitEx"]], "__call__() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.__call__"]], "__init__() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.__init__"]], "__str__() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.__str__"]], "add_n_wires() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.add_n_wires"]], "add_wire() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.add_wire"]], "check_append_wires() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.check_append_wires"]], "check_prepend_wires() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.check_prepend_wires"]], "collate_circuit_shots_task_gen() (qermit.taskgraph.mitex method)": [[4, "qermit.taskgraph.mitex.collate_circuit_shots_task_gen"]], "filter_observable_tracker_task_gen() (qermit.taskgraph.mitex method)": [[4, "qermit.taskgraph.mitex.filter_observable_tracker_task_gen"]], "from_taskgraph() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.from_TaskGraph"]], "gen_compiled_mitres() (qermit.taskgraph.mitex method)": [[4, "qermit.taskgraph.mitex.gen_compiled_MitRes"]], "gen_compiled_shot_split_mitres() (qermit.taskgraph.mitex method)": [[4, "qermit.taskgraph.mitex.gen_compiled_shot_split_MitRes"]], "get_basic_measurement_circuit() (qermit.taskgraph.mitex method)": [[4, "qermit.taskgraph.mitex.get_basic_measurement_circuit"]], "get_expectations_task_gen() (qermit.taskgraph.mitex method)": [[4, "qermit.taskgraph.mitex.get_expectations_task_gen"]], "parallel() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.parallel"]], "run() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.run"]], "run_basic() (qermit.taskgraph.mitex.mitex method)": [[4, "qermit.taskgraph.mitex.MitEx.run_basic"]], "split_results_task_gen() (qermit.taskgraph.mitex method)": [[4, "qermit.taskgraph.mitex.split_results_task_gen"]], "mitres (class in qermit.taskgraph.mitres)": [[5, "qermit.taskgraph.mitres.MitRes"]], "__call__() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.__call__"]], "__init__() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.__init__"]], "__str__() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.__str__"]], "add_n_wires() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.add_n_wires"]], "add_wire() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.add_wire"]], "backend_compile_circuit_shots_task_gen() (qermit.taskgraph.mitres method)": [[5, "qermit.taskgraph.mitres.backend_compile_circuit_shots_task_gen"]], "backend_handle_task_gen() (qermit.taskgraph.mitres method)": [[5, "qermit.taskgraph.mitres.backend_handle_task_gen"]], "backend_res_task_gen() (qermit.taskgraph.mitres method)": [[5, "qermit.taskgraph.mitres.backend_res_task_gen"]], "check_append_wires() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.check_append_wires"]], "check_prepend_wires() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.check_prepend_wires"]], "from_taskgraph() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.from_TaskGraph"]], "gen_shot_split_mitres() (qermit.taskgraph.mitres method)": [[5, "qermit.taskgraph.mitres.gen_shot_split_MitRes"]], "group_shots_task_gen() (qermit.taskgraph.mitres method)": [[5, "qermit.taskgraph.mitres.group_shots_task_gen"]], "parallel() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.parallel"]], "run() (qermit.taskgraph.mitres.mitres method)": [[5, "qermit.taskgraph.mitres.MitRes.run"]], "split_shots_task_gen() (qermit.taskgraph.mitres method)": [[5, "qermit.taskgraph.mitres.split_shots_task_gen"]], "iotask (class in qermit.taskgraph.mittask)": [[6, "qermit.taskgraph.mittask.IOTask"]], "mittask (class in qermit.taskgraph.mittask)": [[6, "qermit.taskgraph.mittask.MitTask"]], "__call__() (qermit.taskgraph.mittask.mittask method)": [[6, "qermit.taskgraph.mittask.MitTask.__call__"]], "__init__() (qermit.taskgraph.mittask.mittask method)": [[6, "qermit.taskgraph.mittask.MitTask.__init__"]], "__repr__() (qermit.taskgraph.mittask.mittask method)": [[6, "qermit.taskgraph.mittask.MitTask.__repr__"]], "__str__() (qermit.taskgraph.mittask.mittask method)": [[6, "qermit.taskgraph.mittask.MitTask.__str__"]], "__weakref__ (qermit.taskgraph.mittask.mittask attribute)": [[6, "qermit.taskgraph.mittask.MitTask.__weakref__"]], "collate_results_task_gen() (qermit.probabilistic_error_cancellation.pec_learning_based method)": [[7, "qermit.probabilistic_error_cancellation.pec_learning_based.collate_results_task_gen"]], "gen_pec_learning_based_mitex() (qermit.probabilistic_error_cancellation.pec_learning_based method)": [[7, "qermit.probabilistic_error_cancellation.pec_learning_based.gen_PEC_learning_based_MitEx"]], "gen_get_clifford_training_set() (qermit.probabilistic_error_cancellation.pec_learning_based method)": [[7, "qermit.probabilistic_error_cancellation.pec_learning_based.gen_get_clifford_training_set"]], "gen_get_noisy_circuits() (qermit.probabilistic_error_cancellation.pec_learning_based method)": [[7, "qermit.probabilistic_error_cancellation.pec_learning_based.gen_get_noisy_circuits"]], "gen_label_gates() (qermit.probabilistic_error_cancellation.pec_learning_based method)": [[7, "qermit.probabilistic_error_cancellation.pec_learning_based.gen_label_gates"]], "gen_rebase_to_frames_and_computing() (qermit.probabilistic_error_cancellation.pec_learning_based method)": [[7, "qermit.probabilistic_error_cancellation.pec_learning_based.gen_rebase_to_frames_and_computing"]], "gen_run_with_quasi_prob() (qermit.probabilistic_error_cancellation.pec_learning_based method)": [[7, "qermit.probabilistic_error_cancellation.pec_learning_based.gen_run_with_quasi_prob"]], "gen_wrap_frame_gates() (qermit.probabilistic_error_cancellation.pec_learning_based method)": [[7, "qermit.probabilistic_error_cancellation.pec_learning_based.gen_wrap_frame_gates"]], "learn_quasi_probs_task_gen() (qermit.probabilistic_error_cancellation.pec_learning_based method)": [[7, "qermit.probabilistic_error_cancellation.pec_learning_based.learn_quasi_probs_task_gen"]], "gen_fullycorrelated_spam_mitres() (qermit.spam.spam_mitres method)": [[8, "qermit.spam.spam_mitres.gen_FullyCorrelated_SPAM_MitRes"]], "gen_uncorrelated_spam_mitres() (qermit.spam.spam_mitres method)": [[8, "qermit.spam.spam_mitres.gen_UnCorrelated_SPAM_MitRes"]], "gen_full_tomography_spam_characterisation_task() (qermit.spam.full_spam_correction method)": [[8, "qermit.spam.full_spam_correction.gen_full_tomography_spam_characterisation_task"]], "gen_full_tomography_spam_circuits_task() (qermit.spam.full_spam_correction method)": [[8, "qermit.spam.full_spam_correction.gen_full_tomography_spam_circuits_task"]], "gen_full_tomography_spam_correction_task() (qermit.spam.full_spam_correction method)": [[8, "qermit.spam.full_spam_correction.gen_full_tomography_spam_correction_task"]], "gen_get_bit_maps_task() (qermit.spam.full_spam_correction method)": [[8, "qermit.spam.full_spam_correction.gen_get_bit_maps_task"]], "signalfilter (class in qermit.spectral_filtering.signal_filter)": [[9, "qermit.spectral_filtering.signal_filter.SignalFilter"]], "smallcoefficientsignalfilter (class in qermit.spectral_filtering.signal_filter)": [[9, "qermit.spectral_filtering.signal_filter.SmallCoefficientSignalFilter"]], "filter() (qermit.spectral_filtering.signal_filter.signalfilter method)": [[9, "qermit.spectral_filtering.signal_filter.SignalFilter.filter"]], "filter() (qermit.spectral_filtering.signal_filter.smallcoefficientsignalfilter method)": [[9, "qermit.spectral_filtering.signal_filter.SmallCoefficientSignalFilter.filter"]], "gen_fft_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_fft_task"]], "gen_flatten_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_flatten_task"]], "gen_inv_fft_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_inv_fft_task"]], "gen_mitigation_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_mitigation_task"]], "gen_ndarray_to_dict_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_ndarray_to_dict_task"]], "gen_obs_exp_grid_gen_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_obs_exp_grid_gen_task"]], "gen_param_grid_gen_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_param_grid_gen_task"]], "gen_reshape_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_reshape_task"]], "gen_result_extraction_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_result_extraction_task"]], "gen_spectral_filtering_mitex() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_spectral_filtering_MitEx"]], "gen_symbol_val_gen_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_symbol_val_gen_task"]], "gen_wire_copy_task() (qermit.spectral_filtering.spectral_filtering method)": [[9, "qermit.spectral_filtering.spectral_filtering.gen_wire_copy_task"]], "taskgraph (class in qermit.taskgraph.task_graph)": [[10, "qermit.taskgraph.task_graph.TaskGraph"]], "__call__() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.__call__"]], "__init__() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.__init__"]], "__repr__() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.__repr__"]], "__str__() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.__str__"]], "__weakref__ (qermit.taskgraph.task_graph.taskgraph attribute)": [[10, "qermit.taskgraph.task_graph.TaskGraph.__weakref__"]], "add_n_wires() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.add_n_wires"]], "add_wire() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.add_wire"]], "append() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.append"]], "check_append_wires() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.check_append_wires"]], "check_prepend_wires() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.check_prepend_wires"]], "decompose_taskgraph_nodes() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.decompose_TaskGraph_nodes"]], "from_taskgraph() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.from_TaskGraph"]], "get_cache() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.get_cache"]], "get_task_graph() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.get_task_graph"]], "n_in_wires (qermit.taskgraph.task_graph.taskgraph property)": [[10, "qermit.taskgraph.task_graph.TaskGraph.n_in_wires"]], "n_out_wires (qermit.taskgraph.task_graph.taskgraph property)": [[10, "qermit.taskgraph.task_graph.TaskGraph.n_out_wires"]], "parallel() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.parallel"]], "prepend() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.prepend"]], "run() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.run"]], "tasks (qermit.taskgraph.task_graph.taskgraph property)": [[10, "qermit.taskgraph.task_graph.TaskGraph.tasks"]], "view_task_graph() (qermit.taskgraph.task_graph.taskgraph method)": [[10, "qermit.taskgraph.task_graph.TaskGraph.view_task_graph"]], "measurementcircuit (class in qermit.taskgraph.utils)": [[11, "qermit.taskgraph.utils.MeasurementCircuit"]], "observabletracker (class in qermit.taskgraph.utils)": [[11, "qermit.taskgraph.utils.ObservableTracker"]], "symbolsdict (class in qermit.taskgraph.utils)": [[11, "qermit.taskgraph.utils.SymbolsDict"]], "__init__() (qermit.taskgraph.utils.measurementcircuit method)": [[11, "qermit.taskgraph.utils.MeasurementCircuit.__init__"]], "__init__() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.__init__"]], "__init__() (qermit.taskgraph.utils.symbolsdict method)": [[11, "qermit.taskgraph.utils.SymbolsDict.__init__"]], "__repr__() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.__repr__"]], "__repr__() (qermit.taskgraph.utils.symbolsdict method)": [[11, "qermit.taskgraph.utils.SymbolsDict.__repr__"]], "__str__() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.__str__"]], "__str__() (qermit.taskgraph.utils.symbolsdict method)": [[11, "qermit.taskgraph.utils.SymbolsDict.__str__"]], "__weakref__ (qermit.taskgraph.utils.measurementcircuit attribute)": [[11, "qermit.taskgraph.utils.MeasurementCircuit.__weakref__"]], "__weakref__ (qermit.taskgraph.utils.observabletracker attribute)": [[11, "qermit.taskgraph.utils.ObservableTracker.__weakref__"]], "__weakref__ (qermit.taskgraph.utils.symbolsdict attribute)": [[11, "qermit.taskgraph.utils.SymbolsDict.__weakref__"]], "add_measurement_circuit() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.add_measurement_circuit"]], "add_symbol() (qermit.taskgraph.utils.symbolsdict method)": [[11, "qermit.taskgraph.utils.SymbolsDict.add_symbol"]], "add_value() (qermit.taskgraph.utils.symbolsdict method)": [[11, "qermit.taskgraph.utils.SymbolsDict.add_value"]], "check_string() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.check_string"]], "circuit (qermit.taskgraph.utils.measurementcircuit property)": [[11, "qermit.taskgraph.utils.MeasurementCircuit.circuit"]], "clear() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.clear"]], "extend_operator() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.extend_operator"]], "from_observabletracker() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.from_ObservableTracker"]], "get_empty_strings() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.get_empty_strings"]], "get_expectations() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.get_expectations"]], "get_measurement_circuits() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.get_measurement_circuits"]], "get_parametric_circuit() (qermit.taskgraph.utils.measurementcircuit method)": [[11, "qermit.taskgraph.utils.MeasurementCircuit.get_parametric_circuit"]], "get_symbolic_map() (qermit.taskgraph.utils.symbolsdict method)": [[11, "qermit.taskgraph.utils.SymbolsDict.get_symbolic_map"]], "measurement_circuits (qermit.taskgraph.utils.observabletracker property)": [[11, "qermit.taskgraph.utils.ObservableTracker.measurement_circuits"]], "modify_coefficients() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.modify_coefficients"]], "qubit_pauli_operator (qermit.taskgraph.utils.observabletracker property)": [[11, "qermit.taskgraph.utils.ObservableTracker.qubit_pauli_operator"]], "remove_strings() (qermit.taskgraph.utils.observabletracker method)": [[11, "qermit.taskgraph.utils.ObservableTracker.remove_strings"]], "set_values() (qermit.taskgraph.utils.symbolsdict method)": [[11, "qermit.taskgraph.utils.SymbolsDict.set_values"]], "symbols (qermit.taskgraph.utils.measurementcircuit property)": [[11, "qermit.taskgraph.utils.MeasurementCircuit.symbols"]], "symbols_from_circuit() (qermit.taskgraph.utils.symbolsdict class method)": [[11, "qermit.taskgraph.utils.SymbolsDict.symbols_from_circuit"]], "symbols_from_dict() (qermit.taskgraph.utils.symbolsdict class method)": [[11, "qermit.taskgraph.utils.SymbolsDict.symbols_from_dict"]], "symbols_from_list() (qermit.taskgraph.utils.symbolsdict class method)": [[11, "qermit.taskgraph.utils.SymbolsDict.symbols_from_list"]], "symbols_list (qermit.taskgraph.utils.symbolsdict property)": [[11, "qermit.taskgraph.utils.SymbolsDict.symbols_list"]], "fit (class in qermit.zero_noise_extrapolation.zne)": [[12, "qermit.zero_noise_extrapolation.zne.Fit"]], "folding (class in qermit.zero_noise_extrapolation.zne)": [[12, "qermit.zero_noise_extrapolation.zne.Folding"]], "circuit() (qermit.zero_noise_extrapolation.zne.folding method)": [[12, "qermit.zero_noise_extrapolation.zne.Folding.circuit"]], "cube_root() (qermit.zero_noise_extrapolation.zne.fit method)": [[12, "qermit.zero_noise_extrapolation.zne.Fit.cube_root"]], "digital_folding_task_gen() (qermit.zero_noise_extrapolation.zne method)": [[12, "qermit.zero_noise_extrapolation.zne.digital_folding_task_gen"]], "exponential() (qermit.zero_noise_extrapolation.zne.fit method)": [[12, "qermit.zero_noise_extrapolation.zne.Fit.exponential"]], "extrapolation_task_gen() (qermit.zero_noise_extrapolation.zne method)": [[12, "qermit.zero_noise_extrapolation.zne.extrapolation_task_gen"]], "gate() (qermit.zero_noise_extrapolation.zne.folding method)": [[12, "qermit.zero_noise_extrapolation.zne.Folding.gate"]], "gen_zne_mitex() (qermit.zero_noise_extrapolation.zne method)": [[12, "qermit.zero_noise_extrapolation.zne.gen_ZNE_MitEx"]], "gen_duplication_task() (qermit.zero_noise_extrapolation.zne method)": [[12, "qermit.zero_noise_extrapolation.zne.gen_duplication_task"]], "gen_initial_compilation_task() (qermit.zero_noise_extrapolation.zne method)": [[12, "qermit.zero_noise_extrapolation.zne.gen_initial_compilation_task"]], "gen_qubit_relabel_task() (qermit.zero_noise_extrapolation.zne method)": [[12, "qermit.zero_noise_extrapolation.zne.gen_qubit_relabel_task"]], "linear() (qermit.zero_noise_extrapolation.zne.fit method)": [[12, "qermit.zero_noise_extrapolation.zne.Fit.linear"]], "odd_gate() (qermit.zero_noise_extrapolation.zne.folding method)": [[12, "qermit.zero_noise_extrapolation.zne.Folding.odd_gate"]], "poly_exponential() (qermit.zero_noise_extrapolation.zne.fit method)": [[12, "qermit.zero_noise_extrapolation.zne.Fit.poly_exponential"]], "polynomial() (qermit.zero_noise_extrapolation.zne.fit method)": [[12, "qermit.zero_noise_extrapolation.zne.Fit.polynomial"]], "richardson() (qermit.zero_noise_extrapolation.zne.fit method)": [[12, "qermit.zero_noise_extrapolation.zne.Fit.richardson"]], "two_qubit_gate() (qermit.zero_noise_extrapolation.zne.folding method)": [[12, "qermit.zero_noise_extrapolation.zne.Folding.two_qubit_gate"]]}})